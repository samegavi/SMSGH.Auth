{"Name":"SMSGH.Auth","Id":1260,"Alias":"SMSGH.Auth","Description":"# SMSGH.Auth details\r\n\r\nSMSGH.Auth allows your Xamarin.Android apps to securely implement a \u0027Login with SMSGH\u0027 feature that allows your app to connect with millions of SMSGH Unity customers.\r\n\r\nSMSGH.Auth will let you take advantage of the [Unity API RESTFULL HTTP](http://developers.smsgh.com/documentations/unity) service using OAuth2.0 Protocols will minimal code.\r\n\r\nThe [SMSGH Unity API] (http://developers.smsgh.com/documentations/unity) exposes messaging and other related functions of the main SMSGH Unity platform and can be used for a variety of purposes such as sending bulk Sms, receiving inbound Sms to managing your short code subscriptions and setting up actions on your premium Sms campaigns.","Version":"1.0","Summary":"Add \u0027Login with SMSGH\u0027 functionality in your apps","QuickStart":"## Getting Started with SMSGH.Auth\r\n\r\n#Setup your SMSGH Unity App Settings \r\n\r\nBefore you can use SMSGH.Auth to provide \u0027Login with SMSGH\u0027functionality in your app you need\r\nto register your app with [SMSGH Unity Platform](https://unity.smsgh.com)\r\n\r\nOnce you have successfully done so you and have generated your *ClientID*, *Scope*, *AuthorizeUrl*\r\nand *RedirectUrl* you need to add these values to your android manifest ad MetaData. Do this by adding the following assembly attribute code:\r\n\r\n```\r\n[assembly: MetaData (\"UnityClientID\", Value=\"ClientID-goes-here\")]\r\n[assembly: MetaData (\"UnityAppScope\", Value=\"Scope-goes-here\")]\r\n[assembly: MetaData (\"UnityAuthorizeUrl\", Value=\"url-goes-here\")]\r\n[assembly: MetaData (\"UnityRedirectUrl\", Value=\"url-goes-here\")]\r\n```\r\n\r\n##Implement the Login Flow\r\n\r\n#####Android\r\nSomeActivity.cs\r\n\r\n````c#\r\nusing SMSGH.Auth;\r\n\r\nloginButton.Click += async delegate\r\n   {\r\n        var service = new SMSGHUnityService();\r\n        var result = await service.LoginAsync(this);\r\n\r\n        if (result.IsAuthenticated)\r\n           {  \r\n           //Login successful! can save Account object which contains access_token\r\n            AccountStore.Create(this).Save(result.Account,\"UnityAccount\");\r\n           //do all you want for successful login here! \r\n            }\r\n     };\r\n````","Hash":"a9c261af51a8f166daa13b0eb09e21ad","TargetPlatforms":["android"],"TrialHash":null}